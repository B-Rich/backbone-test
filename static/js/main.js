// Generated by CoffeeScript 1.6.2
(function() {
  var NewTodoView, Todo, TodoList, TodoListView, TodoRouter, TodoView, _ref, _ref1, _ref2, _ref3, _ref4,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Todo = (function(_super) {
    __extends(Todo, _super);

    function Todo() {
      _ref = Todo.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Todo.prototype.urlRoot = '/todos';

    Todo.prototype.defaults = function() {
      return {
        done: false,
        date: new Date()
      };
    };

    Todo.prototype.toggleStatus = function() {
      if (this.get('done')) {
        this.set({
          'done': false
        });
      } else {
        this.set({
          'done': true
        });
      }
      return this.save();
    };

    return Todo;

  })(Backbone.Model);

  TodoList = (function(_super) {
    __extends(TodoList, _super);

    function TodoList() {
      _ref1 = TodoList.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    TodoList.prototype.model = Todo;

    TodoList.prototype.url = '/todos';

    TodoList.prototype.comparator = function(todo) {
      return (new Date(todo.get('date'))).getTime();
    };

    return TodoList;

  })(Backbone.Collection);

  TodoView = (function(_super) {
    __extends(TodoView, _super);

    function TodoView() {
      _ref2 = TodoView.__super__.constructor.apply(this, arguments);
      return _ref2;
    }

    TodoView.prototype.className = 'todo';

    TodoView.prototype.events = {
      'change input': 'toggleStatus',
      'click .destroy': 'destroy'
    };

    TodoView.prototype.template = _.template('<button class="destroy">&times;</button>' + '<h3 class="' + '<% if(done) print("done") %>">' + '<input type="checkbox"' + '<% if(done) print("checked") %>/>' + '<a href="/todos/<%= id %>"><%= content %></a></h3>');

    TodoView.prototype.initialize = function() {
      this.model.on('change', this.render, this);
      return this.model.on('destroy', this.remove, this);
    };

    TodoView.prototype.toggleStatus = function() {
      return this.model.toggleStatus();
    };

    TodoView.prototype.destroy = function() {
      return this.model.destroy();
    };

    TodoView.prototype.render = function() {
      return this.$el.html(this.template(this.model.toJSON()));
    };

    return TodoView;

  })(Backbone.View);

  NewTodoView = (function(_super) {
    __extends(NewTodoView, _super);

    function NewTodoView() {
      _ref3 = NewTodoView.__super__.constructor.apply(this, arguments);
      return _ref3;
    }

    NewTodoView.prototype.id = 'new-todo';

    NewTodoView.prototype.events = {
      'click button': 'addTodo'
    };

    NewTodoView.prototype.template = '<form method="post"><input id="text"/>' + '<button type="submit">+</button></form>';

    NewTodoView.prototype.initialize = function() {
      return this.collection.on('add', this.clearInput, this);
    };

    NewTodoView.prototype.addTodo = function(evt) {
      var ctx, todo;

      evt.preventDefault();
      todo = new Todo({
        content: this.$('#text').val()
      });
      ctx = this;
      return todo.save({}, {
        success: function() {
          return ctx.collection.add(todo);
        }
      });
    };

    NewTodoView.prototype.clearInput = function() {
      return this.$('#text').val('');
    };

    NewTodoView.prototype.render = function() {
      return this.$el.html(this.template);
    };

    return NewTodoView;

  })(Backbone.View);

  TodoListView = (function(_super) {
    __extends(TodoListView, _super);

    function TodoListView() {
      _ref4 = TodoListView.__super__.constructor.apply(this, arguments);
      return _ref4;
    }

    TodoListView.prototype.id = 'todos';

    TodoListView.prototype.initialize = function() {
      this.collection.on('add', this.appendTodo, this);
      return this.collection.on('reset', this.addAll, this);
    };

    TodoListView.prototype.appendTodo = function(todo) {
      var todoView;

      todoView = new TodoView({
        model: todo
      });
      todoView.render();
      return this.$el.append(todoView.el);
    };

    TodoListView.prototype.addAll = function() {
      this.collection.sort();
      return this.collection.forEach(this.appendTodo, this);
    };

    TodoListView.prototype.render = function() {
      return this.addAll();
    };

    return TodoListView;

  })(Backbone.View);

  TodoRouter = new (Backbone.Router.extend({
    routes: {
      'todos/:id': 'show',
      '': 'index'
    },
    initialize: function() {
      return this.todoList = new TodoList;
    },
    start: function() {
      Backbone.history.start({
        pushState: true
      });
      return $(document).on('click', 'a:not([data-bypass])', function(evt) {
        var href, protocol;

        href = $(this).attr('href');
        protocol = this.protocol + '//';
        if (href.slice(protocol.length) !== protocol) {
          evt.preventDefault();
          return Backbone.history.navigate(href, {
            trigger: true
          });
        }
      });
    },
    index: function() {
      var newTodoView, todoListView;

      newTodoView = new NewTodoView({
        collection: this.todoList
      });
      todoListView = new TodoListView({
        collection: this.todoList
      });
      newTodoView.render();
      todoListView.render();
      $('#app').html(newTodoView.el);
      $('#app').append(todoListView.el);
      return this.todoList.fetch();
    },
    show: function(url_id) {
      var todo;

      todo = new Todo({
        id: url_id
      });
      return todo.fetch({
        success: function() {
          var todoView;

          todoView = new TodoView({
            model: todo
          });
          todoView.render();
          return $('#app').html(todoView.el);
        }
      });
    }
  }));

  $(function() {
    return TodoRouter.start();
  });

}).call(this);
