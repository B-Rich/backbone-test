// Generated by CoffeeScript 1.6.2
var NewTodoView, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

NewTodoView = (function(_super) {
  __extends(NewTodoView, _super);

  function NewTodoView() {
    _ref = NewTodoView.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  NewTodoView.prototype.id = 'new-todo';

  NewTodoView.prototype.events = {
    'click button': 'addTodo'
  };

  NewTodoView.prototype.template = '<form method="post"><input id="text"/>' + '<button type="submit">+</button></form>';

  NewTodoView.prototype.initialize = function() {
    return this.collection.on('add', this.clearInput, this);
  };

  NewTodoView.prototype.addTodo = function(evt) {
    var ctx, todo;

    evt.preventDefault();
    todo = new Todo({
      content: this.$('#text').val()
    });
    ctx = this;
    return todo.save({}, {
      success: function() {
        return ctx.collection.add(todo);
      }
    });
  };

  NewTodoView.prototype.clearInput = function() {
    return this.$('#text').val('');
  };

  NewTodoView.prototype.render = function() {
    return this.$el.html(this.template);
  };

  return NewTodoView;

})(Backbone.View);
